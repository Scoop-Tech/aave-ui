/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, BigNumberish, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { FacuetMock, FacuetMockInterface } from '../FacuetMock';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'assets',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'units',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'recipient',
        type: 'address',
      },
    ],
    name: 'claimAssets',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
    ],
    name: 'getUnits',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'units',
        type: 'uint256',
      },
    ],
    name: 'setUnit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'asset',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'units',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162000d1438038062000d148339810160408190526200003491620001c5565b60006200004062000111565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350815181518114620000b85760405162461bcd60e51b8152600401620000af9062000294565b60405180910390fd5b60005b818110156200010757620000fe848281518110620000d557fe5b6020026020010151848381518110620000ea57fe5b60200260200101516200011560201b60201c565b600101620000bb565b505050506200031c565b3390565b6001600160a01b03909116600090815260016020526040902055565b80516001600160a01b03811681146200014957600080fd5b92915050565b600082601f83011262000160578081fd5b8151620001776200017182620002fc565b620002d5565b8181529150602080830190848101818402860182018710156200019957600080fd5b60005b84811015620001ba578151845292820192908201906001016200019c565b505050505092915050565b60008060408385031215620001d8578182fd5b82516001600160401b0380821115620001ef578384fd5b818501915085601f83011262000203578384fd5b8151620002146200017182620002fc565b80828252602080830192508086018a82838702890101111562000235578889fd5b8896505b8487101562000263576200024e8b8262000131565b84526001969096019592810192810162000239565b5088015190965093505050808211156200027b578283fd5b506200028a858286016200014f565b9150509250929050565b60208082526021908201527f4c656e67746873206f66207468652061727261797320646f6e2774206d6174636040820152600d60fb1b606082015260800190565b6040518181016001600160401b0381118282101715620002f457600080fd5b604052919050565b60006001600160401b0382111562000312578081fd5b5060209081020190565b6109e8806200032c6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c8578063f2fde38b146100dd578063f3fef3a3146100f0578063ffb5ce77146101035761007d565b80630fefbc0914610082578063315831f1146100ab578063715018a6146100c0575b600080fd5b610095610090366004610760565b610116565b6040516100a291906109a9565b60405180910390f35b6100be6100b9366004610782565b610131565b005b6100be6103b6565b6100d0610435565b6040516100a29190610839565b6100be6100eb366004610760565b610444565b6100be6100fe3660046107b6565b6104fa565b6100be6101113660046107b6565b6106e0565b6001600160a01b031660009081526001602052604090205490565b6001600160a01b038216600090815260016020526040902054806101705760405162461bcd60e51b815260040161016790610942565b60405180910390fd5b60008390506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156101b057600080fd5b505afa1580156101c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e89190610818565b60ff169050600081600a0a8402905080836001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016102249190610839565b60206040518083038186803b15801561023c57600080fd5b505afa158015610250573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102749190610800565b10156102925760405162461bcd60e51b8152600401610167906108e3565b6040516370a0823160e01b815281906001600160a01b038516906370a08231906102c0908990600401610839565b60206040518083038186803b1580156102d857600080fd5b505afa1580156102ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103109190610800565b1061032d5760405162461bcd60e51b815260040161016790610866565b60405163a9059cbb60e01b81526001600160a01b0384169063a9059cbb9061035b908890859060040161084d565b602060405180830381600087803b15801561037557600080fd5b505af1158015610389573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ad91906107e0565b50505050505050565b6103be610723565b6000546001600160a01b039081169116146103eb5760405162461bcd60e51b81526004016101679061090d565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b61044c610723565b6000546001600160a01b039081169116146104795760405162461bcd60e51b81526004016101679061090d565b6001600160a01b03811661049f5760405162461bcd60e51b81526004016101679061089d565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b610502610723565b6000546001600160a01b0390811691161461052f5760405162461bcd60e51b81526004016101679061090d565b60008290506000816001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561056f57600080fd5b505afa158015610583573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a79190610818565b60ff169050600081600a0a8402905080836001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016105e39190610839565b60206040518083038186803b1580156105fb57600080fd5b505afa15801561060f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106339190610800565b10156106515760405162461bcd60e51b8152600401610167906108e3565b826001600160a01b031663a9059cbb610668610435565b836040518363ffffffff1660e01b815260040161068692919061084d565b602060405180830381600087803b1580156106a057600080fd5b505af11580156106b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d891906107e0565b505050505050565b6106e8610723565b6000546001600160a01b039081169116146107155760405162461bcd60e51b81526004016101679061090d565b61071f8282610727565b5050565b3390565b6001600160a01b03909116600090815260016020526040902055565b80356001600160a01b038116811461075a57600080fd5b92915050565b600060208284031215610771578081fd5b61077b8383610743565b9392505050565b60008060408385031215610794578081fd5b61079e8484610743565b91506107ad8460208501610743565b90509250929050565b600080604083850312156107c8578182fd5b6107d28484610743565b946020939093013593505050565b6000602082840312156107f1578081fd5b8151801515811461077b578182fd5b600060208284031215610811578081fd5b5051919050565b600060208284031215610829578081fd5b815160ff8116811461077b578182fd5b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252601e908201527f5573657220616c72656164792068617320656e6f756768206173736574730000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526010908201526f4e6f7420656e6f7567682066756e647360801b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526041908201527f4173736574206973206e6f7420636f6e66696775726564206f7220636c61696d60408201527f696e67206973206e6f7420616c6c6f77656420666f72207468697320617373656060820152601d60fa1b608082015260a00190565b9081526020019056fea2646970667358221220805e58886589e762478cabde1a5f45e317b44408675444ee74a0efbf5e35fd4164736f6c634300060c0033';

export class FacuetMock__factory extends ContractFactory {
  constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    assets: string[],
    units: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FacuetMock> {
    return super.deploy(assets, units, overrides || {}) as Promise<FacuetMock>;
  }
  getDeployTransaction(
    assets: string[],
    units: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(assets, units, overrides || {});
  }
  attach(address: string): FacuetMock {
    return super.attach(address) as FacuetMock;
  }
  connect(signer: Signer): FacuetMock__factory {
    return super.connect(signer) as FacuetMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FacuetMockInterface {
    return new utils.Interface(_abi) as FacuetMockInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FacuetMock {
    return new Contract(address, _abi, signerOrProvider) as FacuetMock;
  }
}
